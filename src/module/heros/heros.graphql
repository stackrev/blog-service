type Query {
  getHeros(
    offset: Float
    limit: Float
    keyword: String
    state: State
  ): Heros
}


type Mutation {
  createHero(heroInfo: CreateHeroInput!): HeroDocsItem
  updateHero(heroInfo: UpdateHeroInput!): HeroDocsItem
  deleteHero(_id: ObjectID): Result
}

type Result {
  _id: ObjectID
}

input CreateHeroInput {
  name: String!
  content: String!
}

input UpdateHeroInput {
  _id: ObjectID
  name: String
  content: String
  state: State
}

enum State {
  TODO
  AGREE
  REFLUSE
}

type Heros {
  total: Float
  offset: Float!
  limit: Float!
  docs: [HeroDocsItem]
}

type HeroDocsItem {
  state: State
  content: String
  name: String
  message: String
}

scalar ObjectID